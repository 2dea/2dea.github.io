@charset "UTF-8";

@function III($int)  {
  // @return #{($int / $root-em-int)}rem;
  @return calc(1rem / $root-em-int * $int);
  // @return calc($root-em * $int);
}

@mixin setTextStyle($size, $line: null, $wght: null)  {
  font-weight: #{$wght};
  font-size: $size;
  line-height: $line;
}

@mixin getGlobalHidden($inline: null)  {
  width: auto; height: 1px; overflow: hidden; margin: 0 0 -1px; padding: 0; border: 0; background: none; visibility: visible; white-space: inherit;

  @if ($inline == 1) {
    display: inline-block; width: 1px; margin-right: -1px; white-space: nowrap;
  } @else {
    display: block; position: absolute; clip: rect(0 0 0 0); clip: rect(0,0,0,0); clip-path: circle(0);
  }
}


// @mixin setScrollGutterStable($selector: ".g-scroll-gutter-stable", $comb: null)  {
//   #{$selector}:not(:hover):not(:focus-within)#{$comb}::-webkit-scrollbar-track  { background-color: Transparent; }
//   #{$selector}#{$comb}::-webkit-scrollbar-thumb  { transition-duration: 0.8s; }
//   #{$selector}:not(:hover):not(:focus-within)#{$comb}::-webkit-scrollbar-thumb  { border-color: Transparent; background-color: Transparent; outline-color: Transparent; }
//   #{$selector}:where( :hover, :focus-within )#{$comb}::-webkit-scrollbar-thumb  { transition-duration: 0.15s; }
// }
@mixin setScrollGutterStable($selector: ".g-scroll-gutter-stable", $end: 800, $start: 150)  {
  #{$selector}  { transition: --color-scrollbar-hidden-track #{$end}ms, --color-scrollbar-hidden-thumb #{$end}ms, --color-scrollbar-hidden-thumb-edge #{$end}ms; }
  #{$selector}:hover,
    #{$selector}:focus-within  { --color-scrollbar-hidden-track: var(--color-scrollbar-track); --color-scrollbar-hidden-thumb: var(--color-scrollbar-thumb); --color-scrollbar-hidden-thumb-edge: var(--color-scrollbar-thumb-edge); transition: --color-scrollbar-hidden-track #{$start}ms, --color-scrollbar-hidden-thumb #{$start}ms, --color-scrollbar-hidden-thumb-edge #{$start}ms; }
  #{$selector}::-webkit-scrollbar-track  { background-color: var(--color-scrollbar-hidden-track); will-change: background-color; }
  #{$selector}::-webkit-scrollbar-thumb:not(:hover):not(:active)  { background-color: var(--color-scrollbar-hidden-thumb); outline-color: var(--color-scrollbar-hidden-thumb-edge, Transparent); will-change: background-color, outline-color; }
}

@mixin inc-scrollbar-width($margin: 3, $thumb: 6)  {
  --margin-scrollbar:    calc(var(--rem) * #{$margin});
  --width-scrollbar:     calc(var(--rem) * #{$thumb} + var(--margin-scrollbar) * 2);
}

@mixin inc-translate($x: -50%, $y: -50%)  {
  -webkit-transform: translate($x, $y); transform: translate($x, $y);
}

@mixin inc-abscenter($x: -50%, $y: -50%)  {
  left: 50%; top: 50%; @include inc-translate($x, $y);
}

@mixin inc-sronly($user-select: null, $center: 1)  {
  font-size: max($ss, $rss); line-height: 1; position: absolute; @if ($center == 1) { @include inc-abscenter(); max-width: 125%; } color: Transparent; pointer-events: none; user-select: $user-select; text-shadow: none;
}

@mixin inc-ellipsis()  {
  text-overflow: ellipsis; white-space: nowrap;
}

@mixin setSymbolVariationSettings($fill: 0, $wght: 400, $opsz: 24)  {
  font-variation-settings: 'FILL' $fill, 'wght' $wght, 'GRAD' 0, 'opsz' $opsz;
}

@mixin setSymbolStyle($fill: 0, $wght: 400, $opsz: 24, $size: $height-icon-30)  {
  font-family: 'wf-MaterialSymbolsRounded-Var', sans-serif; @include setSymbolVariationSettings($fill, $wght, $opsz); font-size: $size; display: inline-flex; max-width: 1em; overflow: hidden; text-transform: uppercase;
}

// @mixin inc-symbol($fill: 0, $wght: 400, $opsz: 24, $size: $height-icon-30)  {
@mixin inc-symbol($fill: 0, $wght: 300, $opsz: 24, $size: $height-icon-30)  {
  direction: ltr; font: normal normal calc(var(--rem) * 24) /1 'wf-MaterialSymbolsOutlined-Var', sans-serif; -moz-font-feature-settings: 'liga'; -webkit-font-feature-settings: 'liga'; font-feature-settings: 'liga'; display: inline-block; text-transform: none; white-space: nowrap; word-wrap: normal; letter-spacing: normal; -moz-osx-font-smoothing: grayscale; -webkit-font-smoothing: antialiased;
  @include setSymbolStyle($fill, $wght, $opsz, $size);
}


@mixin icon-search($size: 16)  {
  --obj-ico-search: url('data:image/svg+xml,<svg width="80" height="16" viewBox="0 0 80 16" fill="none" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(%23a)" stroke="%2364748B" stroke-width="calc(1.2 * 16 / #{$size})" stroke-linejoin="round"><path d="M11.3 11.3 14 14" stroke-linecap="round"/><path d="M12.8 7.4A5.4 5.4 0 1 0 2 7.4a5.4 5.4 0 0 0 10.8 0Z"/></g><g clip-path="url(%23b)" stroke="%23CBD5E1" stroke-width="calc(1.2 * 16 / #{$size})" stroke-linejoin="round"><path d="M27.3 11.3 30 14" stroke-linecap="round"/><path d="M28.8 7.4a5.4 5.4 0 1 0-10.8 0 5.4 5.4 0 0 0 10.8 0Z"/></g><g clip-path="url(%23c)" stroke="%232968F9" stroke-width="calc(1.2 * 16 / #{$size})" stroke-linejoin="round"><path d="M43.3 11.3 46 14" stroke-linecap="round"/><path d="M44.8 7.4a5.4 5.4 0 1 0-10.8 0 5.4 5.4 0 0 0 10.8 0Z"/></g><g clip-path="url(%23d)" stroke="%23fff" stroke-width="calc(1.2 * 16 / #{$size})" stroke-linejoin="round"><path d="M59.3 11.3 62 14" stroke-linecap="round"/><path d="M60.8 7.4a5.4 5.4 0 1 0-10.8 0 5.4 5.4 0 0 0 10.8 0Z"/></g><defs><clipPath id="a"><path fill="%23fff" d="M0 0h16v16H0z"/></clipPath><clipPath id="b"><path fill="%23fff" d="M16 0h16v16H16z"/></clipPath><clipPath id="c"><path fill="%23fff" d="M32 0h16v16H32z"/></clipPath><clipPath id="d"><path fill="%23fff" d="M48 0h16v16H48z"/></clipPath></defs></svg>');
}



:root  {
  // @include setTextStyle($font-l, $line-l, $wght: $bold-70);
  // @include setTextStyle($font-l, $wght: $bold-70);
  // @include setTextStyle(calc(var(--rem) * var(--font-16px)), calc(var(--rem) * var(--line-16px)));
  // margin-top: III(-1);

  // @debug III(-24);
}
