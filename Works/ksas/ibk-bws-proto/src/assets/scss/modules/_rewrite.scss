@charset "UTF-8";

// h1,  h2,  h3,  h4,  h5,  h6,  strong,  th  { font-weight: $bold-70; }

// th,
// td  {
//   border-width: 0;
// }

// th  {
//   text-align: revert;
// }

// button  {
//   min-width: 0;
//   min-height: 0;
//   padding: 0;
//   border: 0;
//   background-color: transparent;
// }

// // theme.css
// // @layer primereact {
//   .p-component  {
//     @include setTextStyle($font-50, $line-50);
//     font-weight: $bold-40;
//     /* color: $color-test;
//     box-shadow: 1px 1px 2px $color-test, -1px -1px 2px $color-test; */
//   // }
// }

.p-hidden  {
  display: none !important;
}

.p-component  {
  font-family: inherit;
  font-feature-settings: inherit;
  font-weight: inherit;
  font-size: inherit;
}















.p-link  {
  text-align: left;
  background-color: transparent;
  margin: 0;
  padding: 0;
  border: none;
  cursor: pointer;
  user-select: none;

  min-width: 0;
  min-height: 0;
}

.p-button  {
  min-width: 0;
  min-height: 0;
  background-color: transparent;
}



.o-breadcrumb.p-breadcrumb  {
  @include setReset();

  font-size: $font-30;
  line-height: $line-30;

  .p-breadcrumb-list  {
    gap: $gap-whitespace-30;

    .p-menuitem-separator  {
      svg  {
        display: none;
      }

      &:after  {
        content: "\203A";
        content: "â€º";
      }
    }

    >:not(:last-child)  {
      color: #64748B;
    }
  }

}




// .p-inputtext  {

// }

.o-form  {
  .p-inputtext  {
    padding-left: calc($gap-element-70 - $e10); padding-right: calc($gap-element-70 - $e10);
    overflow: hidden; text-overflow: ellipsis; white-space: nowrap;

    &:not(.bind)  {
      text-align: inherit;
    }

    &.p-disabled  { color: $color-text-disabled; background-color: #F1F5F9; filter: none; opacity: 1.0; }
  }

  >:where(.bind:is(.p-dropdown, .p-calendar))  {
    @include setReset(1);

    .p-dropdown-label  {
      &.p-placeholder  { color: $color-text-placeholder; }
    }

    .p-dropdown-trigger  { width: auto; }

    .p-datepicker-trigger  { width: auto; }
  }
}







.p-dialog  {
  :has(>&)  {
    --margin-block: calc(var(--rem) * 40);
    --margin-inline: calc(var(--rem) * 40);
    --margin-inline: var(--width-scrollbar);

    --width-90p: 1730;
    --width-80p: 1540;

    --width-70p: 1340;
    --width-60p: 1150;
    --width-50p: 960;
    --width-40p: 770;
    --width-25p: 480;
    --width-20p: 380;

    // justify-content: flex-start;
    flex-direction: column;
    overflow: auto;
    // padding: var(--margin-block) var(--margin-inline);
    padding: 0 var(--margin-inline);
  }

  --radius: #{$radius-70};

  $width-70p: calc(var(--rem) * var(--width-70p));
  $width-60p: calc(var(--rem) * var(--width-60p));
  $width-50p: calc(var(--rem) * var(--width-50p));
  $width-40p: calc(var(--rem) * var(--width-40p));
  $width-25p: calc(var(--rem) * var(--width-25p));
  $width-20p: calc(var(--rem) * var(--width-20p));

  display: flex;
  flex-direction: column;
  position: relative;
  width: $width-40p;
  min-width: calc(1px * var(--breakpoint-min) - var(--margin-inline, 0%) * 2);
  max-width: calc(100% - var(--margin-inline, 0%) * 2);
  min-height: 0;
  max-height: calc(100% - var(--margin-block, 0%) * 2);
  // margin: auto;
  margin: var(--margin-block) auto;
  background: $color-ground;
  border-radius: var(--radius);
  box-shadow: $dropshadow-70;
  pointer-events: auto;

  &:is([style*="position:fixed;"], [style*="position: fixed;"])  { position: absolute !important; }

  &.wdth-70p  { min-width: $width-70p; }
  &.wdth-60p  { min-width: $width-60p; }
  &.wdth-50p  { min-width: $width-50p; }
  &.wdth-40p  { min-width: $width-40p; }
  &.wdth-25p  { width: $width-25p; min-width: $width-25p; }
  &.wdth-20p  { width: $width-20p; min-width: $width-20p; }

  @at-root html:has(.p-dialog-enter-done)  {
     overflow: hidden;
  }

  .p-dialog-header  {
    @include setReset();

    padding: $margin-section-40 $margin-popup-inline;
    border-bottom: $e10 solid #CBD5E1;
    background-color: inherit;
    border-radius: var(--radius) var(--radius) 0 0;
  }

  .p-dialog-content  {
    display: flex;
    flex-direction: column;
    overflow: auto scroll;
    padding: calc($margin-popup-block - $margin-section-10) $margin-popup-inline $margin-popup-block;
    padding-right: calc($margin-popup-inline - var(--width-scrollbar));
    color: inherit;
    background-color: inherit;

    &:last-of-type  {
      border-radius: 0 0 var(--radius) var(--radius);
    }
  }
}










.p-component-overlay-enter:has(.o-loading-layer) {
  animation: p-component-overlay-enter-animation-alt 150ms forwards;
}
.p-component-overlay-leave:has(.o-loading-layer) {
  animation: p-component-overlay-leave-animation-alt 150ms forwards;
}


@keyframes p-component-overlay-enter-animation-alt {
  from {
    background-color: rgba(255,255,255, 0.0);
    backdrop-filter: blur(0px);
  }
  to {
    background-color: rgba(192,192,192, 0.35);
    backdrop-filter: blur(1.5px);
  }
}
@keyframes p-component-overlay-leave-animation-alt {
  from {
    background-color: rgba(255,255,255, 0.35);
    backdrop-filter: blur(1.5px);
  }
  to {
    background-color: rgba(255,255,255, 0.0);
    backdrop-filter: blur(0px);
  }
}









.p-column-filter-menu-button, .p-column-filter-clear-button {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  text-decoration: none;
  overflow: hidden;
  position: relative;
}

.p-datatable  {
  .p-datatable-emptymessage  {
    font-size: $font-30;
    line-height: $line-30;
    color: $color-text-30;
  }
}

.p-datatable .p-column-header-content  {
  display: flex;
  align-items: center;
}

.p-column-filter-menu  {
  display: inline-flex;
  margin-left: auto;
}


// .p-datatable .p-sortable-column:not(.p-highlight):not(.p-sortable-disabled):hover  {
.p-datatable .p-sortable-column:not(.p-sortable-disabled):hover:not(:active)  {
  background-image: linear-gradient(to bottom, rgba(#334155, 0.08), rgba(#334155, 0.08));
  cursor: row-resize;
}

.p-datatable .p-sortable-column:not(.p-sortable-disabled):active  {
  cursor: none;
}

.p-datatable .p-datatable-table .p-highlight  {
  background-color: #D9F9DB;
}

.p-datatable .p-datatable-table .p-x-frozen-last  {
  position: sticky; z-index: 3; border-right-color: #004C9D; background-color: inherit;
}

// [data-pc-section="sort"],  [data-pc-section="columnfilter"]  { display: none; }














// .o-section >.main._primary:has(.p-datatable-scrollable-table),
//   .o-section >.main._primary :has(.p-datatable-scrollable-table):not(:has(>.p-datatable-scrollable-table))  { display: flex; flex-direction: column; }
// .o-section >.main._primary :has(.p-datatable-scrollable-table)  { flex: 1 0 0; }
// .o-section >.main._primary :has(>.p-datatable-scrollable-table)  { flex-basis: var(--height-section-main); overflow: auto; }

:has(.p-datatable-scrollable-table):is(.o-section >.main._primary),
  :has(.p-datatable-scrollable-table):is(.o-section >.main._primary *):not(:has(>.p-datatable-scrollable-table))  { display: flex; flex-direction: column; }
:has(.p-datatable-scrollable-table):is(.o-section >.main._primary *)  { flex: 1 0 0; }
:has(>.p-datatable-scrollable-table):is(.o-section >.main._primary *)  { flex-basis: var(--height-section-main); min-width: 100%; min-height: 0; overflow: auto; resize: both; }
:has(>.p-datatable-scrollable-table):is(.o-section >.main._primary *)[style*="width:"][style*="height:"]  { --color-scrollbar-track: rgba(240,240,240, 0.88); flex-basis: auto; min-height: var(--height-section-main); border-radius: $radius-abs-20; }
:has(>.p-datatable-scrollable-table):is(.o-section >.main._primary *)[style*="width:"][style*="height:"]:hover  { --color-scrollbar-track: rgba(255,255,255, 0.88); box-shadow: 0 calc(var(--rem) * 3) 12px rgba(0,0,0, 0.12); box-shadow: $dropshadow-40; }


